apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply from: "${project.rootDir}/gradle/findbugs_plugin.gradle"
apply from: "${project.rootDir}/gradle/checkstyle_plugin.gradle"

def versionMajor = 0
def versionMinor = 0
def versionPatch = 0

android {
    compileSdkVersion 23
    buildToolsVersion "${BUILD_TOOLS_VERSION}"

    defaultConfig {
        applicationId "com.dkajiwara.jp.androidtemplate"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode versionMajor * 100000 + versionMinor * 100 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionPatch}"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        debug {
        }
        release {
//            storeFile file(productKeyStore)
//            keyAlias productKeyAlias
//            storePassword productKeyStorePassword
//            keyPassword productKeyAliasPassword
        }
    }
    buildTypes {
        debug {
            debuggable true
            versionNameSuffix '-dev'
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
    }
    lintOptions {
        abortOnError false
    }
    testOptions {
        //ref:http://tools.android.com/tech-docs/unit-testing-support
        unitTests.returnDefaultValues = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:support-annotations:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:support-v4:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:appcompat-v7:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:recyclerview-v7:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:cardview-v7:${SUPPORT_LIBRARY_VERSION}"
    compile "com.android.support:design:${SUPPORT_LIBRARY_VERSION}"

    compile 'io.reactivex:rxjava:1.1.5'
    compile 'io.reactivex:rxandroid:1.2.0'
    compile 'com.trello:rxlifecycle:0.6.1'
    compile 'com.trello:rxlifecycle-components:0.6.1'
    compile 'com.annimon:stream:1.0.9' //Lightweight-Stream-API
    compile 'com.jakewharton.threetenabp:threetenabp:1.0.3'

    // A memory leak detection library.
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3.1'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3.1'

    // Set test library.
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:1.10.19'
    androidTestCompile "com.android.support:support-annotations:${SUPPORT_LIBRARY_VERSION}"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
    androidTestCompile ('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude module: 'support-annotations'
    }
    // Requires Android 4.3 (API level 18) or higher.
    // androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.1'
}